#version 300 es
precision mediump float;
precision highp int;

const float _47[13] = float[](3.3111589345935499295592308044434e-06, 0.00017935443611349910497665405273438, 0.00330012175254523754119873046875, 0.0272260047495365142822265625, 0.114954240620136260986328125, 0.2664848268032073974609375, 0.17570428550243377685546875, 0.2664848268032073974609375, 0.114954240620136260986328125, 0.0272260047495365142822265625, 0.00330012175254523754119873046875, 0.00017935443611349910497665405273438, 3.3111589345935499295592308044434e-06);
const float _67[13] = float[](-11.0714282989501953125, -9.14285755157470703125, -7.21428585052490234375, -5.28571414947509765625, -3.357142925262451171875, -1.4285714626312255859375, 0.0, 1.4285714626312255859375, 3.357142925262451171875, 5.28571414947509765625, 7.21428585052490234375, 9.14285755157470703125, 11.0714282989501953125);

struct PushVarsPS
{
    highp vec4 sRTSize;
};

uniform PushVarsPS pushvars;

uniform highp sampler2D sTex;

layout(location = 0) out highp vec4 outColor0;
in highp vec2 ilUV;

highp vec4 blur_taps(highp sampler2D tex, highp vec2 uv)
{
    highp vec4 samples = vec4(0.0);
    for (int i = 0; i < 13; i++)
    {
        highp float w = _47[i];
        samples += (texture(tex, uv + vec2(_67[i] * pushvars.sRTSize.z, 0.0)) * vec4(w));
    }
    return samples;
}

void main()
{
    highp vec2 param = ilUV;
    outColor0 = blur_taps(sTex, param);
}

