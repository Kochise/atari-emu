#version 300 es
precision mediump float;
precision highp int;

struct PushVarsPS
{
    highp float sDesaturateAmount;
    highp float sDesaturateExponent;
};

uniform PushVarsPS pushvars;

uniform highp sampler2D sTex;

in highp vec2 ilUV;
layout(location = 0) out highp vec4 outColor0;

highp float rgb_to_lightness(highp vec3 rgb)
{
    highp float l = ((rgb.x * 0.2125999927520751953125) + (rgb.y * 0.715200006961822509765625)) + (rgb.z * 0.072200000286102294921875);
    highp float kTransitionPoint = 0.008856452070176601409912109375;
    highp float kSlope = 903.29632568359375;
    highp float _42;
    if (l > kTransitionPoint)
    {
        _42 = (116.0 * pow(l, 0.3333333432674407958984375)) - 16.0;
    }
    else
    {
        _42 = l * kSlope;
    }
    highp float lStar = _42 * 0.00999999977648258209228515625;
    return lStar;
}

void main()
{
    highp vec4 srcSample = texture(sTex, ilUV);
    highp vec3 param = srcSample.xyz;
    highp float lStar = rgb_to_lightness(param);
    lStar = pow(lStar, pushvars.sDesaturateExponent);
    highp vec4 _90 = srcSample;
    highp vec3 _100 = mix(_90.xyz, vec3(lStar, lStar, lStar), vec3(pushvars.sDesaturateAmount));
    srcSample.x = _100.x;
    srcSample.y = _100.y;
    srcSample.z = _100.z;
    outColor0 = srcSample;
}

